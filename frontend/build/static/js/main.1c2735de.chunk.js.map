{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Footer","App","className","style","minHeight","theme","mode","defaultSelectedKeys","Item","padding","background","margin","name","onFinish","values","console","log","fetch","method","headers","body","JSON","stringify","then","res","label","type","htmlType","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAIQA,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAgEVC,MA9Df,WASE,OACE,eAAC,IAAD,CAAQC,UAAU,SAASC,MAAO,CAAEC,UAAW,SAA/C,UACE,eAACP,EAAD,WACE,qBAAKK,UAAU,SACf,eAAC,IAAD,CAAMG,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,UACE,cAAC,IAAKC,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,WAGnB,eAACT,EAAD,CAASI,MAAO,CAAEM,QAAS,SAAUC,WAAY,QAASC,OAAQ,QAAlE,UACE,eAAC,IAAD,CAAYR,MAAO,CAAEQ,OAAQ,UAA7B,UACE,cAAC,IAAWH,KAAZ,mBACA,cAAC,IAAWA,KAAZ,mBACA,cAAC,IAAWA,KAAZ,qBAEF,eAAC,IAAD,CACEI,KAAK,QACLC,SA1BS,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBG,MAAM,OAAQ,CAAEC,OAAQ,OAASC,QAAS,CAAC,eAAgB,oBAAqBC,KAAMC,KAAKC,UAAUR,KAClGS,MAAK,SAACC,GACLT,QAAQC,IAAIQ,OAoBZ,UAIE,cAAC,IAAKhB,KAAN,CACEiB,MAAM,QACNb,KAAK,QAFP,SAIE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,CACEiB,MAAM,cACNb,KAAK,cAFP,SAIE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,CACEiB,MAAM,SACNb,KAAK,SAFP,SAIE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,UACE,cAAC,IAAD,CAAQkB,KAAK,UAAUC,SAAS,SAAhC,4BAMN,cAAC3B,EAAD,CAAQG,MAAO,CAAEyB,UAAW,UAA5B,wDCnDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c2735de.chunk.js","sourcesContent":["import { Layout, Menu, Breadcrumb, Form, Input, Button, } from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const onFinish = (values) => {\n    console.log('Success:', values);\n    fetch('/api', { method: 'POST',  headers: {'Content-Type': 'application/json'}, body: JSON.stringify(values) })\n      .then((res) => {\n        console.log(res)\n      })\n  };\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: '100vh' }}>\n      <Header>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px', background: 'white', margin: '20px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <Form\n          name=\"basic\"\n          onFinish={onFinish}\n        >\n          <Form.Item\n            label=\"Title\"\n            name=\"title\"\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Description\"\n            name=\"description\"\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Author\"\n            name=\"author\"\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}